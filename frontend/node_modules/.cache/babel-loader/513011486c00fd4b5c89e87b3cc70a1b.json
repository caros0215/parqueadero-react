{"ast":null,"code":"\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, { ...props\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props\n  });\n}\n\nconst Offcanvas = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    children,\n    'aria-labelledby': ariaLabelledby,\n    placement = 'start',\n    responsive,\n\n    /* BaseModal props */\n    show = false,\n    backdrop = true,\n    keyboard = true,\n    scroll = false,\n    onEscapeKeyDown,\n    onShow,\n    onHide,\n    container,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    onEntered,\n    onExit,\n    onExiting,\n    onEnter,\n    onEntering,\n    onExited,\n    backdropClassName,\n    manager: propsManager,\n    renderStaticNode = false,\n    ...props\n  } = _ref;\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const handleHide = useEventCallback(onHide);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n\n    return getSharedManager();\n  }\n\n  const handleEnter = function (node) {\n    if (node) node.style.visibility = 'visible';\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    onEnter == null || onEnter(node, ...args);\n  };\n\n  const handleExited = function (node) {\n    if (node) node.style.visibility = '';\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    onExited == null || onExited(...args);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", { ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});","map":{"version":3,"sources":["C:/Users/Oscar/Documents/parqueadero-react/parqueadero-react/node_modules/react-bootstrap/esm/Offcanvas.js"],"names":["classNames","useBreakpoint","useEventCallback","React","useCallback","useEffect","useMemo","useRef","useState","BaseModal","Fade","OffcanvasBody","OffcanvasToggling","ModalContext","OffcanvasHeader","OffcanvasTitle","useBootstrapPrefix","BootstrapModalManager","getSharedManager","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DialogTransition","props","BackdropTransition","Offcanvas","forwardRef","ref","bsPrefix","className","children","ariaLabelledby","placement","responsive","show","backdrop","keyboard","scroll","onEscapeKeyDown","onShow","onHide","container","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","manager","propsManager","renderStaticNode","modalManager","showOffcanvas","setShowOffcanvas","handleHide","hideResponsiveOffcanvas","modalContext","getModalManager","current","handleContainerOverflow","handleEnter","node","style","visibility","args","handleExited","renderBackdrop","backdropProps","renderDialog","dialogProps","Provider","value","transition","backdropTransition","displayName","Object","assign","Body","Header","Title"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport useBreakpoint from '@restart/hooks/useBreakpoint';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport Fade from './Fade';\nimport OffcanvasBody from './OffcanvasBody';\nimport OffcanvasToggling from './OffcanvasToggling';\nimport ModalContext from './ModalContext';\nimport OffcanvasHeader from './OffcanvasHeader';\nimport OffcanvasTitle from './OffcanvasTitle';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BootstrapModalManager, { getSharedManager } from './BootstrapModalManager';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(OffcanvasToggling, {\n    ...props\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props\n  });\n}\nconst Offcanvas = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  'aria-labelledby': ariaLabelledby,\n  placement = 'start',\n  responsive,\n  /* BaseModal props */\n\n  show = false,\n  backdrop = true,\n  keyboard = true,\n  scroll = false,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  renderStaticNode = false,\n  ...props\n}, ref) => {\n  const modalManager = useRef();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'offcanvas');\n  const [showOffcanvas, setShowOffcanvas] = useState(false);\n  const handleHide = useEventCallback(onHide);\n  const hideResponsiveOffcanvas = useBreakpoint(responsive || 'xs', 'up');\n  useEffect(() => {\n    // Handles the case where screen is resized while the responsive\n    // offcanvas is shown. If `responsive` not provided, just use `show`.\n    setShowOffcanvas(responsive ? show && !hideResponsiveOffcanvas : show);\n  }, [show, responsive, hideResponsiveOffcanvas]);\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    if (scroll) {\n      // Have to use a different modal manager since the shared\n      // one handles overflow.\n      if (!modalManager.current) modalManager.current = new BootstrapModalManager({\n        handleContainerOverflow: false\n      });\n      return modalManager.current;\n    }\n    return getSharedManager();\n  }\n  const handleEnter = (node, ...args) => {\n    if (node) node.style.visibility = 'visible';\n    onEnter == null || onEnter(node, ...args);\n  };\n  const handleExited = (node, ...args) => {\n    if (node) node.style.visibility = '';\n    onExited == null || onExited(...args);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName)\n  }), [backdropClassName, bsPrefix]);\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    ...dialogProps,\n    ...props,\n    className: classNames(className, responsive ? `${bsPrefix}-${responsive}` : bsPrefix, `${bsPrefix}-${placement}`),\n    \"aria-labelledby\": ariaLabelledby,\n    children: children\n  });\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [!showOffcanvas && (responsive || renderStaticNode) && renderDialog({}), /*#__PURE__*/_jsx(ModalContext.Provider, {\n      value: modalContext,\n      children: /*#__PURE__*/_jsx(BaseModal, {\n        show: showOffcanvas,\n        ref: ref,\n        backdrop: backdrop,\n        container: container,\n        keyboard: keyboard,\n        autoFocus: autoFocus,\n        enforceFocus: enforceFocus && !scroll,\n        restoreFocus: restoreFocus,\n        restoreFocusOptions: restoreFocusOptions,\n        onEscapeKeyDown: onEscapeKeyDown,\n        onShow: onShow,\n        onHide: handleHide,\n        onEnter: handleEnter,\n        onEntering: onEntering,\n        onEntered: onEntered,\n        onExit: onExit,\n        onExiting: onExiting,\n        onExited: handleExited,\n        manager: getModalManager(),\n        transition: DialogTransition,\n        backdropTransition: BackdropTransition,\n        renderBackdrop: renderBackdrop,\n        renderDialog: renderDialog\n      })\n    })]\n  });\n});\nOffcanvas.displayName = 'Offcanvas';\nexport default Object.assign(Offcanvas, {\n  Body: OffcanvasBody,\n  Header: OffcanvasHeader,\n  Title: OffcanvasTitle\n});"]},"metadata":{},"sourceType":"module"}