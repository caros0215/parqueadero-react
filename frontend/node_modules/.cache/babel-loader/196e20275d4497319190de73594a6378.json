{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oscar\\\\Documents\\\\parqueadero-react\\\\parqueadero-react\\\\frontend\\\\src\\\\components\\\\SidebarContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SidebarContext = /*#__PURE__*/createContext();\nexport const SidebarProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(true);\n\n  const toggleSidebar = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(SidebarContext.Provider, {\n    value: {\n      isOpen,\n      toggleSidebar\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SidebarProvider, \"mEi83NlPXQzy/XIDfTYWzOSvaHw=\");\n\n_c = SidebarProvider;\nexport const useSidebar = () => {\n  _s2();\n\n  const context = useContext(SidebarContext);\n\n  if (!context) {\n    throw new Error('useSidebar must be used within a SidebarProvider');\n  }\n\n  return context;\n};\n\n_s2(useSidebar, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarProvider\");","map":{"version":3,"sources":["C:/Users/Oscar/Documents/parqueadero-react/parqueadero-react/frontend/src/components/SidebarContext.js"],"names":["React","createContext","useContext","useState","SidebarContext","SidebarProvider","children","isOpen","setIsOpen","toggleSidebar","useSidebar","context","Error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;;AAEA,MAAMC,cAAc,gBAAGH,aAAa,EAApC;AAEA,OAAO,MAAMI,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMM,aAAa,GAAG,MAAM;AAC1BD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEA,MAAAA,MAAF;AAAUE,MAAAA;AAAV,KAAhC;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZM;;GAAMD,e;;KAAAA,e;AAcb,OAAO,MAAMK,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAMC,OAAO,GAAGT,UAAU,CAACE,cAAD,CAA1B;;AACA,MAAI,CAACO,OAAL,EAAc;AACZ,UAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACD;;AACD,SAAOD,OAAP;AACD,CANM;;IAAMD,U","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst SidebarContext = createContext();\r\n\r\nexport const SidebarProvider = ({ children }) => {\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  const toggleSidebar = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <SidebarContext.Provider value={{ isOpen, toggleSidebar }}>\r\n      {children}\r\n    </SidebarContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useSidebar = () => {\r\n  const context = useContext(SidebarContext);\r\n  if (!context) {\r\n    throw new Error('useSidebar must be used within a SidebarProvider');\r\n  }\r\n  return context;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}