{"ast":null,"code":"/**\n * react-router v7.1.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { FrameworkContext, RemixErrorBoundary, RouterProvider, createBrowserHistory, createClientRoutes, createClientRoutesWithHMRRevalidationOptOut, createRouter, decodeViaTurboStream, deserializeErrors, getPatchRoutesOnNavigationFunction, getSingleFetchDataStrategy, invariant, mapRouteProperties, matchRoutes, shouldHydrateRouteLoader, useFogOFWarDiscovery } from \"./chunk-SYFQ2XB5.mjs\"; // lib/dom-export/dom-router-provider.tsx\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */React.createElement(RouterProvider, {\n    flushSync: ReactDOM.flushSync,\n    ...props\n  });\n} // lib/dom-export/hydrated-router.tsx\n\n\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\n\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\n\nfunction createHydratedRouter() {\n  initSsrInfo();\n\n  if (!ssrInfo) {\n    throw new Error(\"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\");\n  }\n\n  let localSsrInfo = ssrInfo;\n\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then(value => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch(e => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n\n  let routes = createClientRoutes(ssrInfo.manifest.routes, ssrInfo.routeModules, ssrInfo.context.state, ssrInfo.context.isSpaMode);\n  let hydrationData = void 0;\n\n  if (!ssrInfo.context.isSpaMode) {\n    hydrationData = { ...ssrInfo.context.state,\n      loaderData: { ...ssrInfo.context.state.loaderData\n      }\n    };\n    let initialMatches = matchRoutes(routes, window.location, window.__reactRouterContext?.basename);\n\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n\n        if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, ssrInfo.context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    hydrationData,\n    mapRouteProperties,\n    dataStrategy: getSingleFetchDataStrategy(ssrInfo.manifest, ssrInfo.routeModules, () => router2),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.isSpaMode, ssrInfo.context.basename)\n  });\n  ssrInfo.router = router2;\n\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n\n  router2.createRoutesForHMR =\n  /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\n\nfunction HydratedRouter() {\n  if (!router) {\n    router = createHydratedRouter();\n  }\n\n  let [criticalCss, setCriticalCss] = React2.useState(process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0);\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe(newState => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(router, ssrInfo.manifest, ssrInfo.routeModules, ssrInfo.context.isSpaMode);\n  return (// This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n\n    /* @__PURE__ */\n    React2.createElement(React2.Fragment, null, /* @__PURE__ */React2.createElement(FrameworkContext.Provider, {\n      value: {\n        manifest: ssrInfo.manifest,\n        routeModules: ssrInfo.routeModules,\n        future: ssrInfo.context.future,\n        criticalCss,\n        isSpaMode: ssrInfo.context.isSpaMode\n      }\n    }, /* @__PURE__ */React2.createElement(RemixErrorBoundary, {\n      location\n    }, /* @__PURE__ */React2.createElement(RouterProvider2, {\n      router\n    }))), /* @__PURE__ */React2.createElement(React2.Fragment, null))\n  );\n}\n\nexport { HydratedRouter, RouterProvider2 as RouterProvider };","map":{"version":3,"sources":["C:/Users/Oscar/Documents/parqueadero-react/parqueadero-react/node_modules/react-router/dist/development/dom-export.mjs"],"names":["FrameworkContext","RemixErrorBoundary","RouterProvider","createBrowserHistory","createClientRoutes","createClientRoutesWithHMRRevalidationOptOut","createRouter","decodeViaTurboStream","deserializeErrors","getPatchRoutesOnNavigationFunction","getSingleFetchDataStrategy","invariant","mapRouteProperties","matchRoutes","shouldHydrateRouteLoader","useFogOFWarDiscovery","React","ReactDOM","RouterProvider2","props","createElement","flushSync","React2","ssrInfo","router","initSsrInfo","window","__reactRouterContext","__reactRouterManifest","__reactRouterRouteModules","context","manifest","routeModules","stateDecodingPromise","routerInitialized","createHydratedRouter","Error","localSsrInfo","stream","then","value","state","catch","e","error","routes","isSpaMode","hydrationData","loaderData","initialMatches","location","basename","match","routeId","route","id","manifestRoute","HydrateFallback","hasLoader","errors","router2","history","dataStrategy","patchRoutesOnNavigation","initialized","initialize","createRoutesForHMR","__reactRouterDataRouter","HydratedRouter","criticalCss","setCriticalCss","useState","process","env","NODE_ENV","__reactRouterClearCriticalCss","setLocation","useLayoutEffect","subscribe","newState","Fragment","Provider","future"],"mappings":"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","sourcesContent":["/**\n * react-router v7.1.3\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport {\n  FrameworkContext,\n  RemixErrorBoundary,\n  RouterProvider,\n  createBrowserHistory,\n  createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createRouter,\n  decodeViaTurboStream,\n  deserializeErrors,\n  getPatchRoutesOnNavigationFunction,\n  getSingleFetchDataStrategy,\n  invariant,\n  mapRouteProperties,\n  matchRoutes,\n  shouldHydrateRouteLoader,\n  useFogOFWarDiscovery\n} from \"./chunk-SYFQ2XB5.mjs\";\n\n// lib/dom-export/dom-router-provider.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */ React.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\n}\n\n// lib/dom-export/hydrated-router.tsx\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter() {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\n    );\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch((e) => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(\n    ssrInfo.manifest.routes,\n    ssrInfo.routeModules,\n    ssrInfo.context.state,\n    ssrInfo.context.isSpaMode\n  );\n  let hydrationData = void 0;\n  if (!ssrInfo.context.isSpaMode) {\n    hydrationData = {\n      ...ssrInfo.context.state,\n      loaderData: { ...ssrInfo.context.state.loaderData }\n    };\n    let initialMatches = matchRoutes(\n      routes,\n      window.location,\n      window.__reactRouterContext?.basename\n    );\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        if (route && manifestRoute && shouldHydrateRouteLoader(\n          manifestRoute,\n          route,\n          ssrInfo.context.isSpaMode\n        ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    hydrationData,\n    mapRouteProperties,\n    dataStrategy: getSingleFetchDataStrategy(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      () => router2\n    ),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.isSpaMode,\n      ssrInfo.context.basename\n    )\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter() {\n  if (!router) {\n    router = createHydratedRouter();\n  }\n  let [criticalCss, setCriticalCss] = React2.useState(\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\n  );\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe((newState) => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(\n    router,\n    ssrInfo.manifest,\n    ssrInfo.routeModules,\n    ssrInfo.context.isSpaMode\n  );\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\n      FrameworkContext.Provider,\n      {\n        value: {\n          manifest: ssrInfo.manifest,\n          routeModules: ssrInfo.routeModules,\n          future: ssrInfo.context.future,\n          criticalCss,\n          isSpaMode: ssrInfo.context.isSpaMode\n        }\n      },\n      /* @__PURE__ */ React2.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React2.createElement(RouterProvider2, { router }))\n    ), /* @__PURE__ */ React2.createElement(React2.Fragment, null))\n  );\n}\nexport {\n  HydratedRouter,\n  RouterProvider2 as RouterProvider\n};\n"]},"metadata":{},"sourceType":"module"}